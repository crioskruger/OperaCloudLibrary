{
  "runtime": "Net60",
  "defaultVariables": null,
  "documentGenerator": {
    "fromDocument": {
      "json": "swagger: '2.0'\r\ninfo:\r\n  title: oAuth API for OHIP\r\n  version: 2020.04.21\r\n  description: REST API to obtain an OAuth token from the Oracle Hospitality Integration Platform for use with Property APIs\r\n  x-summary: >-\r\n    The OHIP REST API enables you to develop\r\n    apps that connect to Oracle Hospitality products through a single endpoint\r\n    in the Oracle Hospitality cloud.\r\n    \r\nschemes:\r\n  - https\r\n\r\nbasePath: /oauth/v1\r\n\r\ntags:\r\n  - name: Authentication\r\n    description: Authentication service\r\npaths:\r\n  /tokens:\r\n    post:\r\n      description: >-\r\n        <p>This is required to access Oracle Hospitality OPERA Cloud REST APIs. \r\n        </p><h3>Obtaining a token</h3><p>To obtain a token include the following headers:</p>\r\n        <ul><li>A Basic\r\n        authentication header using the base64 hash of your Client ID and Client Secret in the format\r\n        <code>ClientID:ClientSecret</code> - base64 encoded to the Basic Access Authorization standard</li>\r\n        <li>Your application key in the <code>x-app-key</code> header</li></ul>\r\n        <p>And the following body parameters:</p>\r\n        <h4>Body parameters for obtaining your initial access token</h4>\r\n        <ul><li><strong>grant_type</strong>.  Required to be \"password\"</strong></li><li><strong>username</strong>.  set this to your \r\n        OPERA Cloud integration username.</strong></li><li><strong>password</strong>.  Set this to your OPERA Cloud integration user's password.</li>\r\n        <li><strong>scope</strong>. Optional.  Reserved for future use.</li>\r\n        </strong></li></ul>\r\n        <h3>JSON Web Token (JWT)</h3><p> An open\r\n        standard (<a href=\"https://tools.ietf.org/html/rfc7519\"\r\n        title=\"Definition of RFC7519, the standard for JWT tokens\">RFC 7519</a>)\r\n        that defines a compact and self-contained way for securely transmitting\r\n        information between parties as a JSON object. This information can be\r\n        verified and trusted because it is digitally\r\n        signed.</p><p><strong>OperationId:</strong>getToken</p>\r\n      summary: Authenticate with the identity server\r\n      operationId: getToken\r\n      produces:\r\n        - application/json\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          schema:\r\n            $ref: '#/definitions/OAuth2TokenResponse'\r\n        '400':\r\n          description: >-\r\n            Bad Request. This error is returned if the authentication\r\n            information provided is not valid.\r\n        '401':\r\n          description: >-\r\n            Unauthorized. Invalid client ID, client secret, username, and/or\r\n            password.\r\n        '403':\r\n          description: >-\r\n            Forbidden. This error is returned if the operation is not allowed\r\n            for the request.\r\n      parameters:\r\n        - name: grant_type\r\n          description: The grant type.  This value will depend on the API you are passing the OAuth token to.\r\n          in: formData\r\n          required: true\r\n          type: string\r\n          enum:\r\n            - password\r\n        - name: username\r\n          description: >-\r\n            Your OPERA Cloud integration user name. Required value\r\n            when requesting a token using the password grant.\r\n          in: formData\r\n          required: false\r\n          type: string\r\n        - name: password\r\n          in: formData\r\n          type: string\r\n          required: false\r\n          description: >-\r\n            Your OPERA Cloud integration user password. Required value\r\n            when requesting a token using the password grant.\r\n        - name: scope\r\n          in: formData\r\n          type: string\r\n          required: false\r\n          description: >-\r\n            Your desired scope to be included in the token.  This is an optional parameter\r\n            and is reserved for future use.\r\n        - $ref: '#/parameters/x-app-key'\r\n      consumes:\r\n        - application/x-www-form-urlencoded\r\n      tags:\r\n        - Authentication\r\n      x-internal-id: v1-oauth2Token-post\r\n\r\nparameters:\r\n  x-app-key:\r\n    name: x-app-key\r\n    description: Client or Partnerâ€™s Application Key\r\n    type: string\r\n    pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$'\r\n    in: header\r\n    required: true\r\n    x-example: 41ecd082-8997-4c69-af34-2f72b83645ff\r\n\r\ndefinitions:\r\n  OAuth2TokenResponse:\r\n    type: object\r\n    description: OAuth2 token object sent as a response to the token request\r\n    required:\r\n      - access_token\r\n    properties:\r\n      access_token:\r\n        type: string\r\n        description: >-\r\n          The access token.  Include this in the header for every subsequent\r\n          request.\r\n      expires_in:\r\n        type: integer\r\n        format: int64\r\n        description: >-\r\n          Time in seconds for the access token to expire (typically,\r\n          3600 i.e. 60 minutes)\r\n      token_type:\r\n        type: string\r\n        description: The type of access token issued (Bearer).\r\n      oracle_tk_context:\r\n        type: string\r\n        description: Always user_assertion.\r\n        \r\nsecurityDefinitions:\r\n  basicAuth:\r\n    type: basic\r\n\r\nsecurity:\r\n  - basicAuth: []\r\n",
      "url": "http://redocly.github.io/redoc/openapi.yaml",
      "output": null,
      "newLineBehavior": "Auto"
    }
  },
  "codeGenerators": {
    "openApiToCSharpClient": {
      "clientBaseClass": null,
      "configurationClass": null,
      "generateClientClasses": true,
      "generateClientInterfaces": false,
      "clientBaseInterface": null,
      "injectHttpClient": false,
      "disposeHttpClient": true,
      "protectedMethods": [],
      "generateExceptionClasses": true,
      "exceptionClass": "ApiException",
      "wrapDtoExceptions": true,
      "useHttpClientCreationMethod": false,
      "httpClientType": "System.Net.Http.HttpClient",
      "useHttpRequestMessageCreationMethod": false,
      "useBaseUrl": true,
      "generateBaseUrlProperty": true,
      "generateSyncMethods": false,
      "generatePrepareRequestAndProcessResponseAsAsyncMethods": false,
      "exposeJsonSerializerSettings": true,
      "clientClassAccessModifier": "public",
      "typeAccessModifier": "public",
      "generateContractsOutput": false,
      "contractsNamespace": null,
      "contractsOutputFilePath": null,
      "parameterDateTimeFormat": "s",
      "parameterDateFormat": "yyyy-MM-dd",
      "generateUpdateJsonSerializerSettingsMethod": true,
      "useRequestAndResponseSerializationSettings": false,
      "serializeTypeInformation": false,
      "queryNullValue": "",
      "className": "{controller}Client",
      "operationGenerationMode": "MultipleClientsFromOperationId",
      "additionalNamespaceUsages": [],
      "additionalContractNamespaceUsages": [],
      "generateOptionalParameters": false,
      "generateJsonMethods": false,
      "enforceFlagEnums": false,
      "parameterArrayType": "System.Collections.Generic.IEnumerable",
      "parameterDictionaryType": "System.Collections.Generic.IDictionary",
      "responseArrayType": "System.Collections.Generic.ICollection",
      "responseDictionaryType": "System.Collections.Generic.IDictionary",
      "wrapResponses": false,
      "wrapResponseMethods": [],
      "generateResponseClasses": false,
      "responseClass": "SwaggerResponse",
      "namespace": "OperaCloud.Reservas",
      "requiredPropertiesMustBeDefined": true,
      "dateType": "System.DateTimeOffset",
      "jsonConverters": null,
      "anyType": "object",
      "dateTimeType": "System.DateTimeOffset",
      "timeType": "System.TimeSpan",
      "timeSpanType": "System.TimeSpan",
      "arrayType": "System.Collections.Generic.ICollection",
      "arrayInstanceType": "System.Collections.ObjectModel.Collection",
      "dictionaryType": "System.Collections.Generic.IDictionary",
      "dictionaryInstanceType": "System.Collections.Generic.Dictionary",
      "arrayBaseType": "System.Collections.ObjectModel.Collection",
      "dictionaryBaseType": "System.Collections.Generic.Dictionary",
      "classStyle": "Poco",
      "jsonLibrary": "NewtonsoftJson",
      "generateDefaultValues": true,
      "generateDataAnnotations": true,
      "excludedTypeNames": [],
      "excludedParameterNames": [],
      "handleReferences": false,
      "generateImmutableArrayProperties": false,
      "generateImmutableDictionaryProperties": false,
      "jsonSerializerSettingsTransformationMethod": null,
      "inlineNamedArrays": false,
      "inlineNamedDictionaries": false,
      "inlineNamedTuples": true,
      "inlineNamedAny": false,
      "generateDtoTypes": true,
      "generateOptionalPropertiesAsNullable": false,
      "generateNullableReferenceTypes": false,
      "templateDirectory": null,
      "typeNameGeneratorType": null,
      "propertyNameGeneratorType": null,
      "enumNameGeneratorType": null,
      "serviceHost": null,
      "serviceSchemes": null,
      "output": "OperaCloudLibrary/OperaCloud.Reservas.Client/OperaCloud.Client.Generated.cs",
      "newLineBehavior": "Auto"
    }
  }
}